{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","toUTCString","slice","runClock","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFhD,EAKEC,SAAW,EALb,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CACZR,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAG9CM,QAAQC,KAAM,EAAKX,MAAMC,SACxB,OAdP,gCAiBE,SAAmBW,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJD,EAAUC,YAAcA,GAE1BH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAtB9D,kCA0BE,WACEG,cAAcV,KAAKD,YA3BvB,oBA8BE,WACE,IAAQJ,EAAUK,KAAKN,MAAfC,MACAY,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,WA3CX,GAA2BiB,aCD3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAGX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVX,UAAW,WAHf,EAMEY,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKpB,SAAS,CAAEe,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CAAEe,UAAU,OAG5BlB,KAAKmB,QAAUlB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZI,UAAWM,QAEZ,QAtBP,oBAyBE,WACE,MAAgCb,KAAKN,MAA7BwB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,8CAEe,IAAbO,EACI,cAAC,EAAD,CAAOX,UAAWA,IAClB,YAlCd,GAAyBK,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ceebbe3c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string\n};\n\ntype State = {\n  today: string\n};\n\nexport class Clock extends Component<Props> {\n  state: Readonly<State> = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  runClock = 0;\n\n  componentDidMount() {\n    this.runClock = window.setInterval(() => {\n      this.setState({\n        today: new Date().toUTCString().slice(-12, -4),\n      });\n      /* eslint-disable-next-line no-console */\n      console.info((this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      /* eslint-disable-next-line no-console */\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.runClock);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {\n          hasClock === true\n            ? <Clock clockName={clockName} />\n            : null\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}